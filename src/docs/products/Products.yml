paths:
  /api/products/:
    get:
      summary: get all users
      tags:
        - Products
      responses:
        "200":
          description: get all products from DB
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#"
        "500":
          description: error server side
  /api/products/{pid}/:
    get:
      summary: get user by id
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: product id
          schema:
            $type: ObjectId
      responses:
        "200":
          description: get user by id info
        "500":
          description: server side error        
components:
  schemas:
    Products:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id generated by mongo
        first_name:
          type: string
          description: firstname of the user
        last_name:
          type: string
          description: lastname of the user
        email:
          type: string
          description: user email
        password:
          type: string
          description: user's psw
        role:
          type: string
          enum: ["user", "admin"]
      example:
        _id: 6f38b062-b739
        first_name: John
        last_name: Doe
        email: ejeyd@example.com
        password: someEncryptedPSW
        role: admin            